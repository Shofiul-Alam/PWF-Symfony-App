<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \BackendBundle\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectAddress', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectRatesRules', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectInductions', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'client', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectCreated', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectUpdated', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'porjectUpdatedBy', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'archived', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'lattitude', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'longitude', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedContact', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedInduction', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedSkillCompetency', 'splicedAllocatedContact', 'splicedAllocatedSkillCompetency', 'splicedAllocatedInduction', 'firstTime'];
        }

        return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectName', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectAddress', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectRatesRules', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectInductions', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'client', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectCreated', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'projectUpdated', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'porjectUpdatedBy', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'archived', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'lattitude', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'longitude', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedContact', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedInduction', '' . "\0" . 'BackendBundle\\Entity\\Project' . "\0" . 'allocatedSkillCompetency', 'splicedAllocatedContact', 'splicedAllocatedSkillCompetency', 'splicedAllocatedInduction', 'firstTime'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAllocatedContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllocatedContact', []);

        return parent::getAllocatedContact();
    }

    /**
     * {@inheritDoc}
     */
    public function replaceAllocatedContact(\BackendBundle\Entity\AllocatedContact $contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'replaceAllocatedContact', [$contact]);

        return parent::replaceAllocatedContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function addAllocatedContact(\BackendBundle\Entity\AllocatedContact $contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAllocatedContact', [$contact]);

        return parent::addAllocatedContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllocatedContact(\BackendBundle\Entity\AllocatedContact $contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllocatedContact', [$contact]);

        return parent::removeAllocatedContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function unsetAllocatedContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unsetAllocatedContact', []);

        return parent::unsetAllocatedContact();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllContacts', []);

        return parent::getAllContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllocatedSkillCompetency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllocatedSkillCompetency', []);

        return parent::getAllocatedSkillCompetency();
    }

    /**
     * {@inheritDoc}
     */
    public function replaceAllocatedSkillCompetency(\BackendBundle\Entity\AllocatedSkillCompetency $skillCompetency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'replaceAllocatedSkillCompetency', [$skillCompetency]);

        return parent::replaceAllocatedSkillCompetency($skillCompetency);
    }

    /**
     * {@inheritDoc}
     */
    public function addAllocatedSkillCompetency(\BackendBundle\Entity\AllocatedSkillCompetency $skillCompetency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAllocatedSkillCompetency', [$skillCompetency]);

        return parent::addAllocatedSkillCompetency($skillCompetency);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllocatedSkillCompetency(\BackendBundle\Entity\AllocatedSkillCompetency $skillCompetency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllocatedSkillCompetency', [$skillCompetency]);

        return parent::removeAllocatedSkillCompetency($skillCompetency);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllocatedInduction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllocatedInduction', []);

        return parent::getAllocatedInduction();
    }

    /**
     * {@inheritDoc}
     */
    public function replaceAllocatedInduction(\BackendBundle\Entity\AllocatedInduction $induction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'replaceAllocatedInduction', [$induction]);

        return parent::replaceAllocatedInduction($induction);
    }

    /**
     * {@inheritDoc}
     */
    public function addAllocatedInduction(\BackendBundle\Entity\AllocatedInduction $induction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAllocatedInduction', [$induction]);

        return parent::addAllocatedInduction($induction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAllocatedInduction(\BackendBundle\Entity\AllocatedInduction $induction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAllocatedInduction', [$induction]);

        return parent::removeAllocatedInduction($induction);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectName($projectName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectName', [$projectName]);

        return parent::setProjectName($projectName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectName', []);

        return parent::getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectAddress($projectAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectAddress', [$projectAddress]);

        return parent::setProjectAddress($projectAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectAddress', []);

        return parent::getProjectAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectRatesRules($projectRatesRules)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectRatesRules', [$projectRatesRules]);

        return parent::setProjectRatesRules($projectRatesRules);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectRatesRules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectRatesRules', []);

        return parent::getProjectRatesRules();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectInductions($projectInductions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectInductions', [$projectInductions]);

        return parent::setProjectInductions($projectInductions);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectInductions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectInductions', []);

        return parent::getProjectInductions();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(\BackendBundle\Entity\Client $client = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', [$client]);

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', []);

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectCreated($projectCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectCreated', [$projectCreated]);

        return parent::setProjectCreated($projectCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectCreated', []);

        return parent::getProjectCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectUpdated($projectUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectUpdated', [$projectUpdated]);

        return parent::setProjectUpdated($projectUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectUpdated', []);

        return parent::getProjectUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setPorjectUpdatedBy($porjectUpdatedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPorjectUpdatedBy', [$porjectUpdatedBy]);

        return parent::setPorjectUpdatedBy($porjectUpdatedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getPorjectUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPorjectUpdatedBy', []);

        return parent::getPorjectUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function isArchived()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isArchived', []);

        return parent::isArchived();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchived(bool $archived)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchived', [$archived]);

        return parent::setArchived($archived);
    }

    /**
     * {@inheritDoc}
     */
    public function getLattitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLattitude', []);

        return parent::getLattitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLattitude(float $lattitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLattitude', [$lattitude]);

        return parent::setLattitude($lattitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', []);

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude(float $longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', [$longitude]);

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectShortName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectShortName', []);

        return parent::getProjectShortName();
    }

    /**
     * {@inheritDoc}
     */
    public function getEncryptedId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEncryptedId', []);

        return parent::getEncryptedId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEncryptedId(string $encryptedId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEncryptedId', [$encryptedId]);

        return parent::setEncryptedId($encryptedId);
    }

    /**
     * {@inheritDoc}
     */
    public function encodeId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'encodeId', [$id]);

        return parent::encodeId($id);
    }

}
